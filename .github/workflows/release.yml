name: Build and Release

# This workflow is triggered when a new tag is pushed that matches the pattern 'v*.*.*' (e.g., v1.0.0)
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: windows-latest # WinUI 3 apps must be built on Windows
    permissions:
      # Grant write permission to the contents scope
      # This is required for creating a release and uploading assets
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x' # Specify your project's .NET version

      - name: Publish the application
        run: |
          dotnet publish SimpleMailShareHelper.sln -c Release -r win-x64 --self-contained true -p:AppxPackageDir=".\AppxPackages\\" -p:UapAppxPackageBuildMode=Sideloading -p:AppxPackageSigningEnabled=false -p:GenerateAppxPackageOnBuild=true

      - name: Get package name
        id: package
        run: |
          $msixFile = Get-ChildItem -Path "SimpleMailShareHelper\AppxPackages" -Filter "*.msix*" -Recurse | Select-Object -First 1
          if ($null -eq $msixFile) {
            Write-Error "MSIX file not found in SimpleMailShareHelper\AppxPackages"
            exit 1
          }
          echo "Found MSIX package: $($msixFile.FullName)"
          echo "path=$($msixFile.FullName)" >> $env:GITHUB_OUTPUT
          echo "name=$($msixFile.Name)" >> $env:GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            New release of Simple Thunderbird Share Target.
            Install the attached .msix file.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.package.outputs.path }}
          asset_name: ${{ steps.package.outputs.name }}
          asset_content_type: application/msix
